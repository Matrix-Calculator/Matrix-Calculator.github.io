{"version":3,"sources":["holder.js","matrix-square.js","add.js","multiply.js","swap.js","matrix.js","GoHawk.png","ThemedPage.js","app.js","index.js"],"names":["Holder","display","this","value","fraction","isSuccessful","match","length","substr","syncValue","console","log","d","n","s","factor","other","result","add","multiply","equal","syncDisplay","MatrixSquare","update","bind","event","props","row","column","target","id","style","textAlign","height","width","onChange","className","React","Component","Add","confirmAdd","from","Math","floor","document","getElementById","multiplier","to","action","clear","error","options","i","rowCount","push","placeholder","onClick","Multiply","confirmMultiply","toChange","multiplierChange","setState","Swap","confirmSwap","swapA","swapB","Matrix","data","mheight","currentRow","mwidth","source","state","recieveFromSquare","clearFunctions","swap","full","deepcopy","actuallyChanged","a","b","aData","bData","firstSelect","secondSelect","select","e","newDisplay","frozen","setDisplay","freeze","getDisplay","controls","ThemedPage","children","href","class","src","GoHawkImage","App","stage","setMatrix","freezeMatrix","reset","updateMatrix","last","allMatricies","theMatrix","rows","columns","returnValue","htmlFor","marginRight","ReactDOM","render"],"mappings":"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","file":"static/js/main.cdc355d9.chunk.js","sourcesContent":["import { add, multiply, fraction, equal } from 'mathjs';\n\nexport class Holder {\n    constructor(display=\"\") {\n        this.display = display;\n        this.value = fraction(\"0\");\n        this.isSuccessful = true;\n    }\n\n    freeze() {\n        if(!this.display) { this.display = \"0\"; }\n    }\n\n    getDisplay() {\n        return this.display;\n    }\n\n    setDisplay(display) {\n        if(display.match(\"[^0-9-/]\")) return;\n        while(display.length > 1 && display[0] === \"0\") {\n            display = display.substr(1);\n        }\n        this.display = display;\n        this.syncValue();\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    syncValue() {\n        try {\n            this.value = fraction(this.display)\n            this.isSuccessful = true;\n            console.log(\"Synced Values Successfully\");\n        } catch {\n            this.isSuccessful = false;\n            console.log(\"Errors Syncing Value\");\n        }\n    }\n\n    syncDisplay() {\n        try {\n            if(this.value.d === \"1\" || this.value.d === 1) {\n                this.display = this.value.n;\n            } else {\n                this.display = this.value.n + \"/\" + this.value.d;\n            }\n            if(this.value.s === \"-1\" || this.value.s === -1) {\n                this.display = \"-\" + this.display;\n            }\n        } catch {\n            console.log(\"Errors Syncing Display\");\n        }\n    }\n\n    add(factor, other) {\n        let result = add(this.value, multiply(factor, other.value));\n        if(equal(this.value, result)) return false;\n        // TODO: Clean up and add this checking to other options (multiply, i guess swap doesnt exist; probably make it exist)\n        console.log(this.value, result);\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n\n    multiply(factor) {\n        let result = multiply(factor, this.value);\n        if(equal(this.value, result)) return false;\n        this.value = result;\n        this.syncDisplay();\n        return true;\n    }\n}","import React from 'react';\nimport './index.css';\n\nexport class MatrixSquare extends React.Component {\n\n  componentWillMount() {\n    this.update = this.update.bind(this);\n  }\n\n  update(event) {\n    this.props.update(this.props.row, this.props.column, event.target.value);\n  }\n\n  render() {\n    return (\n      <input id={this.props.id} style={{textAlign: \"center\", height: 2 + \"em\", width: 3 + \"em\"}} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n    );\n  }\n\n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Add extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmAdd = this.confirmAdd.bind(this);\n  }\n\n  confirmAdd() {\n    try {\n      const from = Math.floor( document.getElementById(\"addFrom\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"addMultiplier\").value || 0 );\n      const to = Math.floor( document.getElementById(\"addTo\").value ) - 1;\n      this.props.action(to, multiplier, from);\n      this.props.clear();\n    } catch(error) {\n      console.log(\"Add Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Add row\n              <select id='addFrom'>\n                {options}\n              </select>\n              <span>multiplied by</span>\n              <input id=\"addMultiplier\" placeholder=\"0\"></input> to row\n              <select id='addTo'>\n                {options}\n              </select>\n              <button onClick={this.confirmAdd}>Confirm</button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Multiply extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmMultiply = this.confirmMultiply.bind(this);\n    this.toChange = this.toChange.bind(this);\n    this.multiplierChange = this.multiplierChange.bind(this);\n    // this.state = {\n    //   to: 1,\n    //   multiplier: \"\"\n    // }\n  }\n\n  toChange(value) {\n    this.setState({\n      to: value.target.value\n    });\n  }\n\n  multiplierChange(value) {\n    this.setState({\n      multiplier: value.target.value\n    });\n  }\n\n  confirmMultiply() {\n    try {\n      const to = Math.floor( document.getElementById(\"multiplyTo\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"multiplyMultiplier\").value || 1 );\n      this.props.action(to, multiplier);\n      this.props.clear();\n    }\n    catch (error) {\n      console.log(\"Multiply Error\", error);\n    }\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Multiply row\n              <select onChange={this.toChange} id='multiplyTo'>\n                {options}\n              </select>\n              <span>by</span>\n              <input onChange={this.multiplierChange} id=\"multiplyMultiplier\" placeholder=\"1\"></input>\n              <button onClick={this.confirmMultiply}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport './index.css';\n\nexport class Swap extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmSwap = this.confirmSwap.bind(this);\n  }\n\n  confirmSwap() {\n    const swapA = Math.floor( document.getElementById(\"swapA\").value ) - 1;\n    const swapB = Math.floor( document.getElementById(\"swapB\").value ) - 1;\n    this.props.action(swapA, swapB);\n    this.props.clear();\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i} key={i}>{i}</option>);\n    }\n      return (\n          <div className=\"inner-text\">\n              Swap rows\n              <select id='swapA'>\n                {options}\n              </select>\n              <span>and</span>\n              <select id='swapB'>\n                {options}\n              </select>\n              <button onClick={this.confirmSwap}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n}","import React from 'react';\nimport './index.css';\nimport { Holder } from './holder.js';\nimport { equal } from 'mathjs';\nimport { MatrixSquare } from './matrix-square.js';\nimport { Add } from './add.js';\nimport { Multiply } from './multiply.js';\nimport { Swap } from './swap.js';\n\nexport class Matrix extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        let data = []\n        for(let row = 0; row < this.props.mheight; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.props.mwidth; column++) {\n                //currentRow.push(new Holder());\n                if(this.props.source) {\n                    currentRow.push(this.props.source[row][column]);\n                } else {\n                    currentRow.push(new Holder());\n                }\n            }\n            data.push(currentRow);\n        }\n\n        this.state = {\n            data: data\n        };\n\n        this.recieveFromSquare = this.recieveFromSquare.bind(this);\n        this.clearFunctions = this.clearFunctions.bind(this);\n        this.add = this.add.bind(this);\n        this.multiply = this.multiply.bind(this);\n        this.swap = this.swap.bind(this);\n    }\n\n    deepcopy() {\n        // TOODO: Potentially change to a mapping system\n        let full = [];\n        for(let row = 0; row < this.props.mheight; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.props.mwidth; column++) {\n                currentRow.push(new Holder(this.state.data[row][column].display));\n            }\n            full.push(currentRow);\n        }\n        return full;\n    }\n\n    add(to, multiplier, from) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            if(this.state.data[to][column].add(multiplier, this.state.data[from][column])) {\n                actuallyChanged = true;\n            }\n        }\n        if(actuallyChanged) {\n            this.update();\n            //this.props.update(full);\n        }\n    }\n\n    multiply(to, multiplier) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            if(this.state.data[to][column].multiply(multiplier)) {\n                actuallyChanged = true;\n            }\n        }\n        if(actuallyChanged) {\n            this.update();\n            //this.props.update(full);\n        }\n    }\n\n    swap(a, b) {\n        let full = this.deepcopy();\n        let actuallyChanged = false;\n        for(let column = 0; column < this.props.mwidth; column++) {\n            let aData = this.state.data[a][column];\n            let bData = this.state.data[b][column];\n            if(equal(aData.value, bData.value)) actuallyChanged = true;\n            this.state.data[a][column] = this.state.data[b][column];\n            this.state.data[b][column] = aData;\n        }\n        if(actuallyChanged) {\n            this.update();\n            //this.props.update(full);\n        }\n    }\n\n    clearFunctions() {\n        try {\n            const add = {\n                firstSelect: document.getElementById(\"addFrom\"),\n                secondSelect: document.getElementById(\"addTo\"),\n                multiplier: document.getElementById(\"addMultiplier\")\n            }\n            const multiply = {\n                select: document.getElementById(\"multiplyTo\"),\n                multiplier: document.getElementById(\"multiplyMultiplier\")\n            }\n            const swap = {\n                firstSelect: document.getElementById(\"swapA\"),\n                secondSelect: document.getElementById(\"swapB\")\n            }\n\n            let defaultSelect = 1;\n            let defaultMultiplier = \"\";\n\n            add.firstSelect.value = defaultSelect;\n            add.secondSelect.value = defaultSelect;\n            add.multiplier.value = defaultMultiplier;\n\n            multiply.select.value = defaultSelect;\n            multiply.multiplier.value = defaultMultiplier;\n\n            swap.firstSelect.value = defaultSelect;\n            swap.secondSelect.value = defaultSelect;\n\n            console.log(\"Cleared\");\n        } catch(e) {\n            console.log(\"Clearing Errored\", e);\n        }\n    }\n\n    recieveFromSquare(row, column, newDisplay) {\n        if(this.props.frozen) return;\n        this.state.data[row][column].setDisplay(newDisplay);\n        this.update();\n        if(this.props.update) {\n            this.props.update(this.state.data);\n        }\n    }\n\n    update() { this.setState({}); }\n\n    render() {\n\n        let display = [];\n        for(let row = 0; row < this.state.data.length; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.state.data[row].length; column++) {\n                if(this.props.frozen) { this.state.data[row][column].freeze(); }\n                currentRow.push(\n                    // Fix this, no new lines\n                    <MatrixSquare update={this.recieveFromSquare} row={row} column={column} value={this.state.data[row][column].getDisplay()} key={row+\"00\"+column} />\n                );\n            }\n\n            display.push(\n                <div key={row}>\n                    {currentRow}\n                </div>\n            );\n        }\n\n\n        return (\n            <>\n            <div className=\"center\">\n                <div id={this.props.id} className={this.props.className} >\n                    {display}\n                </div>\n            </div>\n                {this.props.controls && (\n                    <>\n                    <br/>\n                    <div id=\"controls\">\n                        <Add rowCount={this.props.mheight} action={this.add} clear={this.clearFunctions} />\n                        <br/>\n                        <Multiply rowCount={this.props.mheight} action={this.multiply} clear={this.clearFunctions} />\n                        <br/>\n                        <Swap rowCount={this.props.mheight} action={this.swap} clear={this.clearFunctions} />\n                    </div>\n                    </>\n                )}\n            </>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/GoHawk.25ecaf2a.png\";","import React from 'react';\nimport GoHawkImage from './GoHawk.png';\n\nexport class ThemedPage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className=\"header\">\n                    <h1>Matrix Calculator</h1>\n                </div>\n                <div className=\"bar\"> </div>\n                <div className=\"inside\">\n                    <div className=\"center\">\n                        <div className=\"div1\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                    <p className=\"authors\">M<a id=\"rickRoll\" href=\"https://youtu.be/dQw4w9WgXcQ\">a</a>de By: <a href=\"mailto:wyattspree@gmail.com\">Wyatt Spree</a> & <a href=\"mailto:gaston95g@gmail.com\">Gaston Gonnerman</a></p>\n                    <div className=\"imageHolder\">\n                        <img id=\"leftImage\" class=\"img\" src={GoHawkImage} />\n                        <img id=\"rightImage\" class=\"img\" src={GoHawkImage} />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\nimport './index.css';\nimport { Matrix } from './matrix.js';\nimport { ThemedPage } from './ThemedPage.js';\n\nexport class App extends React.Component {\n// TODO: Clean up everything, comment stuff, and re-make the whole backend\n    constructor() {\n        super();\n        this.state = {\n            stage: 0\n        }\n        this.setMatrix = this.setMatrix.bind(this);\n        this.freezeMatrix = this.freezeMatrix.bind(this);\n        this.reset = this.reset.bind(this);\n        this.updateMatrix = this.updateMatrix.bind(this);\n        this.last = 0;\n        this.allMatricies = [];\n        this.theMatrix = false;\n    }\n\n    updateMatrix(data) {\n        /*\n        console.log(\"Updaing matrix...\");\n        console.log(\"Last\", this.last);\n        console.log(\"New\", data);\n        this.allMatricies.push(data);\n        this.last = JSON.parse(JSON.stringify(data));\n        console.log(this.allMatricies);\n        */\n        this.theMatrix = data;\n        this.setState({});\n    }\n\n    reset() {\n        this.theMatrix = false;\n        this.setState({\n            stage: 0\n        });\n    }\n\n    setMatrix() {\n        const rows = document.getElementById(\"row\").value;\n        const columns = document.getElementById(\"column\").value;\n        this.setState({\n            stage: 1,\n            rows: rows,\n            columns: columns\n        });\n    }\n\n    freezeMatrix() {\n        this.setState({\n            stage: 2\n        });\n    }\n\n    render() {\n        let returnValue = \"\";\n        switch(this.state.stage) {\n            case 0:\n                let options = []\n                for(let i = 1; i < 11; i++) {\n                    options.push(<option key={i} value={i}>{i}</option> );\n                }\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select the dimensions for a matrix m x n then click the \"Submit\" button</p>\n                        <br/>\n                        <div class=\"offset\">\n                            <ul>\n                                <li>\n                                    <label htmlFor=\"row\">Number of rows: m = </label>\n                                    <select id=\"row\">\n                                        {options}\n                                    </select>\n                                </li>\n                                <br/> <br/>\n                                <li>\n                                    <label htmlFor=\"column\">Number of columns: n = </label>\n                                    <select id=\"column\" style={{marginRight:1 +\"em\"}}>\n                                        {options}\n                                    </select>\n                                </li>\n                            </ul>\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton\" onClick={this.reset}>Reset</button>\n                        <button className=\"specialbutton submit\" onClick={this.setMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 1:\n                console.log(\"Your matrix\", this.theMatrix);\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"instructions\">Please enter the elements of your matrix. Fields left empty will be interpreted as 0. <br/> You may use any mix of fractions and decimals. When you are done please click the \"Submit\" button. </p>\n                        <br/>\n                        <div className=\"center\">\n                            <Matrix id=\"matrix\" update={this.updateMatrix} mwidth={this.state.columns} mheight={this.state.rows} />\n                        </div>\n                        <br/> <br/>\n                        <button className=\"specialbutton\" onClick={this.reset}>Reset</button>\n                        <button className=\"specialbutton submit\" onClick={this.freezeMatrix}>Submit</button>\n                    </ThemedPage>\n                );\n                break;\n            case 2:\n                returnValue = (\n                    <ThemedPage>\n                        <p className=\"inner-text instructions\">Please select one of the below operations to manipulate the primary matrix.</p>\n                        <Matrix id=\"matrix\" source={this.theMatrix} frozen={true} controls={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        <br/>\n                        <button className=\"specialbutton\" onClick={this.reset}>Reset</button>\n                    </ThemedPage>\n                );\n                /*\n                let out = [];\n                for(let i = 0; i < this.allMatricies.length; i++) {\n                    out.push(\n                        <>\n                        <Matrix source={this.allMatricies[i]} frozen={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        <br></br>\n                        </>\n                    )\n                }\n                            <div className=\"old\">\n                                {out}\n                            </div>\n                */\n                break;\n            default:\n                returnValue = (\n                    <div>Uh-oh... Something broke (HTTP Response Code 418)</div>\n                )\n                break;\n        }\n        return returnValue;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app.js';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}