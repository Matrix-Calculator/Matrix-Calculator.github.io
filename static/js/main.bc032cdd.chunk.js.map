{"version":3,"sources":["Holder.js","Matrix.js","media/GoHawk.png","pages/ThemePage/ThemePage.js","pages/Choose/Choose.js","pages/Configure/components/MatrixConfigureSquare.js","pages/Configure/components/MatrixConfigure.js","pages/Configure/Configure.js","pages/Manipulate/components/MatrixDisplay.js","pages/Manipulate/components/Operations/Add.js","pages/Manipulate/components/Operations/Multiply.js","pages/Manipulate/components/Operations/Swap.js","pages/Manipulate/components/Operations/Operations.js","pages/Manipulate/components/MatrixPrimary.js","pages/Manipulate/components/Comment.js","pages/Manipulate/components/MatrixList.js","pages/Manipulate/Manipulate.js","App.js","index.js"],"names":["Holder","value","this","isFailure","fraction","e","console","log","display","toString","stringValue","n","s","d","Matrix","data","impactedRows","rowCount","length","columnCount","row","currentRow","column","push","oldRow","newRow","col","equal","from","scalar","to","map","holder","index","add","multiply","hasChanged","val","a","b","ThemePage","removeBirds","children","id","alt","src","GoHawkImage","className","tabIndex","rel","target","href","Choose","onSubmit","options","i","htmlFor","style","marginRight","onClick","document","getElementById","MatrixConfigureSquare","onUpdate","onChange","areEqual","oldProps","newProps","memo","MatrixConfigure","values","rowIndex","columnIndex","Configure","reset","failures","useState","setValues","useEffect","startingValues","currentValues","textAlign","event","chosenRow","Math","floor","chosenColumn","newValue","match","prev","currentValue","failedPosition","alert","pos","join","MatrixDisplay","matrix","ignoreTransformations","flat","item","fontWeight","indexOf","activeId","Add","action","placeholder","Multiply","Swap","Operations","height","swap","resetSelector","resetInput","processor","fn","args","MatrixPrimary","fakeUpdate","random","Comment","message","fontSize","MatrixList","matricies","messages","setId","Manipulate","share","window","innerWidth","largeScreen","setIsLargeScreen","addEventListener","scrollIntoView","width","App","stage","setStage","setIdFinal","setMessages","setMatricies","operationList","setOpList","currOpList","setCurrOpList","newId","getRowNumber","charCodeAt","params","URLSearchParams","location","search","substring","history","replaceState","x","get","lastIndex","lastIndexOf","firstMatrix","substr","operations","split","replace","RegExp","toLowerCase","operation","isAlpha","typeOfOperation","ops","charAt","splice","documentElement","setProperty","currentOperation","shift","operationType","old","slice","doOperation","newMatrix","addMatrix","addMessage","listOfMatricies","prevMessages","listOfMessages","mapToChar","String","fromCharCode","toUpperCase","rows","columns","fromSize","j","copy","URL","ReactDOM","render","StrictMode"],"mappings":"6WAEqBA,E,WACpB,WAAYC,GAAQ,oBACnBC,KAAKC,WAAY,EACjB,IAECD,KAAKD,MAAQG,YACK,qBAAVH,GAAmC,OAAVA,GAA4B,KAAVA,EAC/CA,EACA,KAEH,MAAOI,GAERC,QAAQC,IAAR,+CAAoDN,EAApD,MACAC,KAAKD,MAAQG,YAAS,KACtBF,KAAKC,WAAY,EAGlBD,KAAKM,QAAUN,KAAKO,W,4CAIrB,WACC,IAAIC,EAAcR,KAAKD,MAAMU,EAG7B,OAFsB,IAAlBT,KAAKD,MAAMW,IAAUF,EAAc,IAAMA,GACxB,IAAjBR,KAAKD,MAAMY,IAASH,EAAcA,EAAc,IAAMR,KAAKD,MAAMY,GAC9DH,M,KCxBYI,E,WACpB,WAAYC,GAA0B,IAApBC,EAAmB,uDAAJ,GAAI,oBACpCd,KAAKe,SAAWF,EAAKG,OACrBhB,KAAKiB,YAAcJ,EAAK,GAAGG,OAC3BhB,KAAKc,aAAeA,EACpBd,KAAKa,KAAO,GACZ,IAAK,IAAIK,EAAM,EAAGA,EAAMlB,KAAKe,SAAUG,IAAO,CAE7C,IADA,IAAIC,EAAa,GACRC,EAAS,EAAGA,EAASpB,KAAKiB,YAAaG,IAC/CD,EAAWE,KAAK,IAAIvB,EAAOe,EAAKK,GAAKE,GAAQd,UAE9CN,KAAKa,KAAKQ,KAAKF,I,8CAkBjB,SAAWG,EAAQC,GAClB,IAAK,IAAIC,EAAM,EAAGA,EAAMF,EAAON,OAAQQ,IACtC,IAAKC,YAAMH,EAAOE,GAAKzB,MAAOwB,EAAOC,GAAKzB,OAAQ,OAAO,EAE1D,OAAO,I,iBAGR,SAAI2B,EAAMC,EAAQC,GAAK,IAAD,OACrBxB,QAAQC,IAAI,qBACZ,IAAIkB,EAAM,YAAOvB,KAAKa,KAAKe,IAa3B,GAZAxB,QAAQC,IAAI,qBACZkB,EAASA,EAAOM,KAAI,SAACC,EAAQC,GAE5B,OADA3B,QAAQC,IAAIyB,EAAO/B,MAAO,EAAKc,KAAKa,GAAMK,GAAOhC,MAAO4B,GACjD,IAAI7B,EACVkC,YACCF,EAAO/B,MACPkC,YAAS,EAAKpB,KAAKa,GAAMK,GAAOhC,MAAO4B,QAI1CvB,QAAQC,IAAI,qBAEPL,KAAKkC,WAAWlC,KAAKa,KAAKe,GAAKL,GAKpC,OADAnB,QAAQC,IAAI,qBACL,IAAIO,EACVZ,KAAKa,KAAKgB,KAAI,SAACM,EAAKJ,GAAN,OAAiBA,IAAUH,EAAKL,EAASY,KACvD,CAACP,IANDxB,QAAQC,IAAI,0B,sBAWd,SAASa,EAAKS,GACb,IAAIJ,EAAM,YAAOvB,KAAKa,KAAKK,IAM3B,GAJAK,EAASA,EAAOM,KACf,SAACC,GAAD,OAAY,IAAIhC,EAAOmC,YAASH,EAAO/B,MAAO4B,OAG1C3B,KAAKkC,WAAWlC,KAAKa,KAAKK,GAAMK,GAKrC,OAAO,IAAIX,EACVZ,KAAKa,KAAKgB,KAAI,SAACM,EAAKJ,GAAN,OAAiBA,IAAUb,EAAMK,EAASY,KACxD,CAACjB,IANDd,QAAQC,IAAI,oC,kBAUd,SAAK+B,EAAGC,GAAI,IAAD,OACV,GAAKrC,KAAKkC,WAAWlC,KAAKa,KAAKuB,GAAIpC,KAAKa,KAAKwB,IAI7C,OAAO,IAAIzB,EACVZ,KAAKa,KAAKgB,KAAI,SAACM,EAAKJ,GACnB,OAAIA,IAAUK,EAAU,EAAKvB,KAAKwB,GAC9BN,IAAUM,EAAU,EAAKxB,KAAKuB,GAC3BD,KAER,CAACC,EAAGC,IATJjC,QAAQC,IAAI,0C,uBApEd,SAAgBU,EAAUE,GAGzB,IADA,IAAIJ,EAAO,GACFK,EAAM,EAAGA,EAAMH,EAAUG,IAAO,CAExC,IADA,IAAIC,EAAa,GACRC,EAAS,EAAGA,EAASH,EAAaG,IAC1CD,EAAWE,KAAK,IAAIvB,EAAO,QAE5Be,EAAKQ,KAAKF,GAEX,OAAO,IAAIP,EAAOC,O,KC5BL,MAA0B,mC,eCwD1ByB,EArDG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAQjC,OACC,qCACC,iCACC,qDAED,qBAAKC,GAAG,QACR,qBAAKA,GAAG,SAAR,SAAkBD,IACjBD,GAAe,qBAAKE,GAAG,YAAYC,IAAI,GAAGC,IAAKC,IAC/CL,GAAe,qBAAKE,GAAG,aAAaC,IAAI,GAAGC,IAAKC,IACjD,iCACC,oBAAGC,UAAU,UAAb,cAEC,mBACCJ,GAAG,WACHK,SAAS,KACTC,IAAI,sBACJC,OAAO,SACPC,KAAK,+BALN,eAFD,SAWQ,IACP,mBACCA,KAAK,8BACLF,IAAI,sBACJD,SAAS,KACTE,OAAO,SAJR,yBAQC,MACD,mBACCC,KAAK,6BACLH,SAAS,KACTC,IAAI,sBACJC,OAAO,SAJR,uCCkBUE,G,MA1DA,SAAC,GAQf,IARiC,IAAhBC,EAAe,EAAfA,SAObC,EAAU,GACLC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAQ/B,KACP,wBAAgBtB,MAAOsD,EAAvB,SACEA,GADWA,IAMf,OACC,qBAAKR,UAAU,uBAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,mBAAGA,UAAU,0BAAb,4FAIA,uBACA,qBAAKA,UAAU,SAAf,SACC,+BACC,+BACC,wBAAOS,QAAQ,WAAf,gCACqB,OAErB,wBAAQb,GAAG,WAAX,SAAuBW,OAExB,uBAPD,IAOQ,uBACP,+BACC,wBAAOE,QAAQ,cAAf,mCACwB,OAExB,wBACCb,GAAG,cACHc,MAAO,CAAEC,YAAa,OAFvB,SAIEJ,YAKL,uBA5BD,IA4BQ,uBACP,wBACCP,UAAU,uBACVY,QAhDkB,WACrB,IAAM1C,EAAW2C,SAASC,eAAe,YAAY5D,MAC/CkB,EAAcyC,SAASC,eAAe,eAAe5D,MAC3DoD,EAASpC,EAAUE,IA2CjB,2BC/CE2C,EAAwB,SAAC,GAA6B,IAA3BnB,EAA0B,EAA1BA,GAAI1C,EAAsB,EAAtBA,MAAO8D,EAAe,EAAfA,SAC3C,OAAO,uBAAO9D,MAAOA,EAAO+D,SAAU,SAAC3D,GAAD,OAAO0D,EAASpB,EAAItC,OAGrD4D,EAAW,SAACC,EAAUC,GAC3B,OAAOD,EAASjE,QAAUkE,EAASlE,OAGrBmE,iBAAKN,EAAuBG,GCS5BI,EAjBS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQP,EAAe,EAAfA,SAClC,OACC,qBAAKhB,UAAU,iBAAf,SACEuB,EAAOvC,KAAI,SAACX,EAAKmD,GAAN,OACXnD,EAAIW,KAAI,SAAC9B,EAAOuE,GAAR,OACP,cAAC,EAAD,CAEC7B,GAAI4B,EAAWnD,EAAIF,OAASsD,EAC5BvE,MAAOA,EACP8D,SAAUA,GAHLQ,EAAWnD,EAAIF,OAASsD,YC0GpBC,G,MA7GG,SAAC,GAAgD,IAA9CxD,EAA6C,EAA7CA,SAAUE,EAAmC,EAAnCA,YAAakC,EAAsB,EAAtBA,SAAUqB,EAAY,EAAZA,MACjDC,EAAW,GADkD,EAqCrCC,mBAAS,IArC4B,mBAqC1DN,EArC0D,KAqClDO,EArCkD,KAsEjE,OAZAC,qBAAU,WAET,IADA,IAAIC,EAAiB,GACZ3D,EAAM,EAAGA,EAAMH,EAAUG,IAAO,CAExC,IADA,IAAI4D,EAAgB,GACX1D,EAAS,EAAGA,EAASH,EAAaG,IAC1C0D,EAAczD,KAAK,IAEpBwD,EAAexD,KAAKyD,GAErBH,EAAUE,KACR,IAGF,qBAAKhC,UAAU,uBAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,sBAAKA,UAAU,0BAAf,UACC,qBAAKU,MAAO,CAAEwB,UAAW,UAAzB,mGAIA,uBACA,qBAAKxB,MAAO,CAAEwB,UAAW,UAAzB,mHAKD,uBACA,cAAC,EAAD,CACCX,OAAQA,EACRK,SAAUA,EACVZ,SAjDiB,SAACpB,EAAIuC,GACzB,IAAMC,EAAYC,KAAKC,MAAM1C,EAAKxB,GAC5BmE,EAAe3C,EAAKxB,EACpBoE,EAAWL,EAAMhC,OAAOjD,MAE1BsF,EAASC,MAAM,cAEnBX,GAAU,SAACY,GAAD,OACTA,EAAK1D,KAAI,SAACX,EAAKmD,GAAN,OACRnD,EAAIW,KAAI,SAAC2D,EAAclB,GACtB,OAAOD,IAAaY,GACnBX,IAAgBc,EACdC,EACAG,cAsCJ,uBAlBD,IAkBQ,uBACP,wBACC3C,UAAU,sBACVC,SAAS,KACTW,QAASe,EAHV,mBAOA,wBACC3B,UAAU,uBACVY,QAlGwB,WAG3B,IAFA,IAAI5C,EAAO,GACP4E,EAAiB,GACZvE,EAAM,EAAGA,EAAMH,EAAUG,IAAO,CAExC,IADA,IAAIC,EAAa,GACRC,EAAS,EAAGA,EAASH,EAAaG,IAAU,CACpD,IAAIU,EAAS,IAAIhC,EAAOsE,EAAOlD,GAAKE,IACpChB,QAAQC,IAAIyB,GACRA,EAAO7B,WACVwF,EAAepE,KAAK,CAACH,EAAKE,EAAQgD,EAAOlD,GAAKE,KAE/CD,EAAWE,KAAKS,GAEjBjB,EAAKQ,KAAKF,GAGX,GADAf,QAAQC,IAAIoF,GACRA,EAAezE,OAAS,EAa3B,OAZAyD,EAAWgB,OACXC,MACC,2CACCD,EACE5D,KACA,SAAC8D,GAAD,qBACSA,EAAI,GAAK,EADlB,aACwBA,EAAI,GAAK,EADjC,eAEEA,EAAI,GAFN,QAKAC,KAAK,OAITzC,EAAStC,IAiER,2BCpGEgF,G,MAAgB,SAAC,GAAoD,IAAlDpD,EAAiD,EAAjDA,GAAIqD,EAA6C,EAA7CA,OAAQrC,EAAqC,EAArCA,QAASsC,EAA4B,EAA5BA,sBAC7C,OACC,qBAAKlD,UAAU,iBAAiBY,QAAS,kBAAMA,GAAWA,EAAQhB,IAAlE,SAEEqD,GACAA,EAAOjF,KAAKmF,OAAOnE,KAAI,SAACoE,EAAMlE,GAC7B,OACC,sBAECwB,MAAO,CACN2C,YAGQ,IAFPJ,EAAOhF,aAAaqF,QACnBjB,KAAKC,MAAMpD,EAAQ+D,EAAO7E,eACd8E,EAEV,SADA,QAPN,SAWEE,EAAK3F,SAVDyB,UAmBNgC,EAAW,SAACC,EAAUC,GAAX,OAAwBA,EAASmC,WAAanC,EAASxB,IAEzDyB,iBAAK2B,EAAe9B,GCZpBsC,G,MApBH,SAAC,GAAyB,IAAvBjD,EAAsB,EAAtBA,QAASkD,EAAa,EAAbA,OAQvB,OACC,sBAAKzD,UAAU,aAAf,oBAEC,wBAAQJ,GAAG,UAAX,SAAsBW,IACtB,iDACA,uBAAOX,GAAG,gBAAgB8D,YAAY,MAJvC,UAKC,wBAAQ9D,GAAG,QAAX,SAAoBW,IACpB,wBAAQK,QAdE,WACX,IAAM/B,EAAOwD,KAAKC,MAAMzB,SAASC,eAAe,WAAW5D,OAAS,EAC9D4B,EAAS+B,SAASC,eAAe,iBAAiB5D,MAClD6B,EAAKsD,KAAKC,MAAMzB,SAASC,eAAe,SAAS5D,OAAS,EAChEuG,EAAO5E,EAAMC,EAAQC,IAUpB,0BCIY4E,EAnBE,SAAC,GAAyB,IAAvBpD,EAAsB,EAAtBA,QAASkD,EAAa,EAAbA,OAQ5B,OACC,sBAAKzD,UAAU,aAAf,yBAEC,wBAAQJ,GAAG,aAAX,SAAyBW,IACzB,sCACA,uBAAOX,GAAG,iBAAiB8D,YAAY,MACvC,wBAAQ9C,QAbO,WAChB,IAAM7B,EAAKsD,KAAKC,MAAMzB,SAASC,eAAe,cAAc5D,OAAS,EAC/D4B,EAAS+B,SAASC,eAAe,kBAAkB5D,MACzDuG,EAAO1E,EAAID,IAUV,yBCIY8E,EAlBF,SAAC,GAAyB,IAAvBrD,EAAsB,EAAtBA,QAASkD,EAAa,EAAbA,OAOxB,OACC,sBAAKzD,UAAU,aAAf,sBAEC,wBAAQJ,GAAG,QAAX,SAAoBW,IACpB,uCACA,wBAAQX,GAAG,QAAX,SAAoBW,IACpB,wBAAQK,QAZG,WACZ,IAAMrB,EAAI8C,KAAKC,MAAMzB,SAASC,eAAe,SAAS5D,OAAS,EACzDsC,EAAI6C,KAAKC,MAAMzB,SAASC,eAAe,SAAS5D,OAAS,EAC/DuG,EAAOlE,EAAGC,IAST,yBC4CYqE,EApDI,SAAC,GAGnB,IAHwD,IAAnCC,EAAkC,EAAlCA,OAAQ3E,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,SAAU2E,EAAW,EAAXA,KAEtCxD,EAAU,GACPC,EAAI,EAAGA,GAAKsD,EAAQtD,IAC5BD,EAAQ/B,KACP,wBAAQtB,MAAOsD,EAAf,SACEA,GADqBA,IAOzB,IAAMwD,EAAgB,SAACpE,GAAD,OAASiB,SAASC,eAAelB,GAAI1C,MAAQ,GAC7D+G,EAAa,SAACrE,GAAD,OAASiB,SAASC,eAAelB,GAAI1C,MAAQ,IAG1DyE,EAAQ,WACbqC,EAAc,WACdC,EAAW,iBACXD,EAAc,SAEdA,EAAc,cACdC,EAAW,kBAEXD,EAAc,SACdA,EAAc,UAITE,EAAY,SAACC,GAAD,2BAAQC,EAAR,iCAAQA,EAAR,yBAAiBD,EAAE,WAAF,EAAMC,IAASzC,KAElD,OACC,sBAAK/B,GAAG,WAAR,UACC,cAAC,EAAD,CACCW,QAASA,EACTkD,OAAQ,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAaF,EAAS,WAAT,GAAU/E,GAAV,OAAkBiF,OAExC,uBACA,cAAC,EAAD,CACC7D,QAASA,EACTkD,OAAQ,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAaF,EAAS,WAAT,GAAU9E,GAAV,OAAuBgF,OAE7C,uBACA,cAAC,EAAD,CACC7D,QAASA,EACTkD,OAAQ,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAaF,EAAS,WAAT,GAAUH,GAAV,OAAmBK,OAEzC,2BChBYC,EAhCO,SAAC,GAAiD,IAA/CpB,EAA8C,EAA9CA,OAAQ9D,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,SAAU2E,EAAuB,EAAvBA,KAAMO,EAAiB,EAAjBA,WAMrD,OALAvC,qBAAU,WACJkB,GACJqB,OAID,qCACC,mBACCtE,UAAU,0BACVU,MAAO,CAAEwB,UAAW,UAFrB,yFAQA,cAAC,EAAD,CACCe,OAAQA,EAERC,uBAAuB,GADlBb,KAAKkC,UAGX,uBACA,cAAC,EAAD,CACCT,OAASb,GAAUA,EAAO/E,UAAa,EACvCiB,IAAKA,EACLC,SAAUA,EACV2E,KAAMA,QCfKS,EAfC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACC,8BACC,sBAAM/D,MAAO,CAACgE,SAAU,QAAxB,oBACCD,EAAQ,GAAG/G,WACZ,sBAAMsC,UAAU,WAAhB,SAA4ByE,EAAQ,KACnCA,EAAQ,GAAG/G,WACZ,sBAAMsC,UAAU,WAAhB,SAA4ByE,EAAQ,KACnCA,EAAQ,GAAG/G,WACZ,sBAAMsC,UAAU,WAAhB,SAA4ByE,EAAQ,KACpC,sBAAM/D,MAAO,CAACgE,SAAU,QAAxB,wBCNGC,EAAa,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUjF,EAAgB,EAAhBA,GAAIkF,EAAY,EAAZA,MAC9C,OACC,qCACC,mBAAGpE,MAAO,CAAEwB,UAAW,UAAvB,mEAGC0C,EAAU5F,KAAI,SAACiE,EAAQ/D,GAAT,OACd,eAAC,WAAD,WAEEA,EAAQ,GAAK,cAAC,EAAD,CAASuF,QAASI,EAAS3F,EAAQ,KACjD,qBAECU,GAAIV,EACJc,UAAWd,IAAUU,EAAK,SAAW,GAHtC,SAKC,cAAC,EAAD,CACCgB,QAASkE,EACT7B,OAAQA,EAERM,SAAU3D,EACVA,GAAIV,GAFCA,IAPDA,KAJQA,UAsBbgC,EAAW,SAACC,EAAUC,GAAX,OAAwBD,EAASvB,KAAOwB,EAASxB,IAEnDyB,iBAAKsD,EAAYzD,GC6FjB6D,EA1HI,SAAC,GAWb,IAVNnF,EAUK,EAVLA,GACAiF,EASK,EATLA,SACAD,EAQK,EARLA,UACAI,EAOK,EAPLA,MACAF,EAMK,EANLA,MACA3F,EAKK,EALLA,IACAC,EAIK,EAJLA,SACA2E,EAGK,EAHLA,KACApC,EAEK,EAFLA,MACA2C,EACK,EADLA,WACK,EACmCzC,mBAASoD,OAAOC,WAAa,KADhE,mBACEC,EADF,KACeC,EADf,KAoBL,OAlBArD,qBAAU,WAITkD,OAAOI,iBAAiB,UAHH,WACpBD,EAAiBH,OAAOC,WAAa,WAKvCnD,qBAAU,WAMLoD,GAAatE,SAASC,eAAe,UAAUwE,mBACjD,CAACV,EAAWO,IAIXA,EAEF,sBAAKvF,GAAG,gBAAR,UACC,qBAAKI,UAAU,+BAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,qBAAKA,UAAU,uBAAf,SACC,cAAC,EAAD,CACCiD,OAAQ2B,EAAUhF,GAClBT,IAAKA,EACLC,SAAUA,EACV2E,KAAMA,EACNO,WAAYA,MAGd,sBAAKtE,UAAU,UAAf,UACC,wBACCA,UAAU,sBACVY,QAASe,EACT1B,SAAS,KAHV,mBAOA,yBAAQD,UAAU,QAAQY,QAASoE,EAAnC,UACC,sBAAMhF,UAAU,cAAcJ,GAAG,YAAjC,wBADD,mBASH,qBAAKI,UAAU,+BAAf,SACC,qBAAKA,UAAU,iCAAf,SACC,sBAAKA,UAAU,oBAAf,UACC,cAAC,EAAD,CACC4E,UAAWA,EACXC,SAAUA,EACVjF,GAAIA,EACJkF,MAAOA,IAER,qBAAKlF,GAAG,qBAQZ,mCACC,qBAAKI,UAAU,oCAAf,SACC,qBAAKA,UAAU,iCAAf,SACC,sBAAKA,UAAU,oBAAf,UACC,cAAC,EAAD,CACCiD,OAAQ2B,EAAUhF,GAClBT,IAAKA,EACLC,SAAUA,EACV2E,KAAMA,EACNO,WAAYA,IAEb,sBAAKtE,UAAU,UAAUU,MAAO,CAAE6E,MAAO,QAAzC,UACC,wBACCtF,SAAS,KACTD,UAAU,sBACVY,QAASe,EAHV,mBAOA,yBAAQ3B,UAAU,QAAQY,QAASoE,EAAnC,UACC,sBACChF,UAAU,cACVJ,GAAG,YAFJ,wBADD,cAUD,cAAC,EAAD,CACCgF,UAAWA,EACXC,SAAUA,EACVjF,GAAIA,EACJkF,MAAOA,cCgMAU,EA5SH,WAAO,IAAD,EACS3D,mBAAS,GADlB,mBACV4D,EADU,KACHC,EADG,OAEQ7D,mBAAS,GAFjB,mBAEVjC,EAFU,KAEN+F,EAFM,OAGe9D,mBAAS,IAHxB,mBAGVgD,EAHU,KAGAe,EAHA,OAIiB/D,mBAAS,IAJ1B,mBAIV+C,EAJU,KAICiB,EAJD,OAKkBhE,mBAAS,IAL3B,mBAKViE,EALU,KAKKC,EALL,OAMmBlE,mBAAS,CAAC,KAN7B,mBAMVmE,EANU,KAMEC,EANF,KAWXnB,EAAQ,SAACoB,GACdP,EAAWO,IAGNvE,EAAQ,WACb+D,EAAS,GACTZ,EAAM,GACNc,EAAY,IACZC,EAAa,IACbE,EAAU,IACVE,EAAc,KAGTE,EAAe,SAACjJ,GACrB,OAAOA,EAAMkJ,WAAW,GAAK,IAG9BrE,qBAAU,WACT,IAAIsE,EAAS,IAAIC,gBAAgBzF,SAAS0F,SAASC,OAAOC,UAAU,IACpExB,OAAOyB,QAAQC,aAAa,GAAI,GAAI,KAEpC,IAAIC,EAAIP,EAAOQ,IAAI,SACnB,GAAKD,EAAL,CAEA,IAAME,EAAYF,EAAEG,YAAY,KAAO,EAEnCC,EAAcJ,EAAEK,OAAO,EAAGH,GAC1BI,EAAaN,EAAEK,OAAOH,GAEpB7D,EAAS+D,EAAYG,MAAM,OAAOnI,KAAI,SAAC4H,GAC5C,OAAOA,EACLQ,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbD,MAAM,KACNnI,KAAI,SAAC4H,GAAD,OAAO,IAAI3J,EAAO2J,SAGrBM,IACHA,EAAaA,EACXzE,MAAM,IAAI4E,OAAO,eAAgB,MACjCrI,KAAI,SAAC4H,GAAD,OAAOA,EAAEU,iBAEfvB,EACCmB,EAAWlI,KAAI,SAACuI,GACf,IAAMC,EAAU,IAAIH,OAAO,aACvBI,EAAkB,EAClBC,EAAM,GA6BV,OA1BAA,EAAIlJ,KAAK2H,EAAaoB,EAAUI,OAAO,MACvCJ,EAAYA,EAAUN,OAAO,IAIfM,EAAUpJ,OAAS,GAAGsE,MAAM+E,KAExCC,EADwB,IAArBF,EAAUpJ,OACK,EAEA,GAKI,IAApBsJ,IACHC,EAAIlJ,KACH2H,EAAaoB,EAAUI,OAAOJ,EAAUpJ,OAAS,KAElDoJ,EAAYA,EAAUN,OAAO,EAAGM,EAAUpJ,OAAS,IAI5B,IAApBsJ,GACHC,EAAIE,OAAO,EAAG,EAAGL,GAGZ,CAAEE,GAAR,OAA4BC,QAK/BnK,QAAQC,IAAI,QAASyF,GACrB1F,QAAQC,IAAI,KAAMsI,GAElBjF,SAASgH,gBAAgBnH,MAAMoH,YAC9B,sBACA7E,EAAO,GAAG9E,QAEX2G,EAAM,GACNY,EAAS,GACTG,EAAa,CAAC,IAAI9H,EAAOkF,QACvB,IAEHlB,qBAAU,WACT,GAA6B,IAAzB+D,EAAc3H,OAAlB,CACA,IAAI4J,EAAmB,YAAIjC,GAAekC,QACpCC,EAAgBF,EAAiBC,QACjB,IAAlBC,GACH1K,QAAQC,IAAI,OAAQuK,GACpB3I,EAAQ,WAAR,cAAY2I,KACgB,IAAlBE,EACVlE,EAAI,WAAJ,cAAQgE,IACoB,IAAlBE,GACV9I,EAAG,WAAH,cAAO4I,IAERhC,GAAU,SAACmC,GAAD,OAASA,EAAIC,MAAM,SAC3B,CAACrC,IAEJ/D,qBAAU,WACT+C,GAAM,SAACoD,GAAD,OAASA,OACb,CAACzC,EAAOb,IAEX,IAqDMwD,EAAc,SAACC,EAAW5D,GAE/B,GADAlH,QAAQC,IAAI,SACR8K,EAAUD,GAGb,OAFAE,EAAW9D,GACXK,GAAM,SAAClF,GAAD,OAAQA,EAAK,MACZ,GAIH0I,EAAY,SAACD,GAClB,IAAKA,EAAW,OAAO,EACvB,IAAIG,EAAe,YAAO5D,GAI1B,OAHA4D,EAAkBA,EAAgBL,MAAM,EAAGvI,EAAK,GAChDrC,QAAQC,IAAI,YAAagL,GACzB3C,EAAa,GAAD,mBAAK2C,GAAL,CAAsBH,MAC3B,GAGFE,EAAa,SAAC9D,GACnB,KAAOA,EAAQtG,OAAS,GACvBsG,EAAQjG,KAAK,IAEdoH,GAAY,SAAC6C,GACZ,IAAIC,EAAiBD,EAAaN,MAAM,EAAGvI,GAG3C,OAFA8I,EAAelK,KAAKiG,EAAQzF,KAAI,SAAC4H,GAAD,OAAOA,EAAElJ,eACzCH,QAAQC,IAAI,WAAYkL,GACjBA,MAIHC,EAAY,SAAC/B,GAAD,OAAOgC,OAAOC,aAAajC,EAAI,KAE3CzH,EAAM,SAACN,EAAMC,EAAQC,GAC1B,IAOC,OANAkH,GAAc,SAACW,GAAD,4BACV,YAAIA,GAAGuB,MAAM,EAAGvI,EAAK,IADX,WAEV+I,EAAU9J,GAAMiK,eAFN,OAEsB,IAAI7L,EACtC6B,IAHY,OAIT6J,EAAU5J,SAERqJ,EAAYxD,EAAUhF,GAAIT,IAAIN,EAAMxB,YAASyB,GAASC,GAAK,CACjE,aACAF,EAAO,EACP,UACA,IAAI5B,EAAO6B,GACX,WACAC,EAAK,IAEL,MAAOzB,GACRC,QAAQC,IAAI,uBAIR4B,EAAW,SAACf,EAAKS,GACtBvB,QAAQC,IAAIa,EAAKS,GACjB,IAOC,OANAmH,GAAc,SAACW,GAAD,4BACV,YAAIA,GAAGuB,MAAM,EAAGvI,EAAK,IADX,WAEV+I,EAAUtK,GAAKyK,eAFL,OAEqB,IAAI7L,EAAO6B,SAE9CvB,QAAQC,IAAIoC,GACZrC,QAAQC,IAAIoH,GACLwD,EAAYxD,EAAUhF,GAAIR,SAASf,EAAKhB,YAASyB,IAAU,CACjE,kBACAT,EAAM,EACN,OACA,IAAIpB,EAAO6B,KAEX,MAAOxB,GACRC,QAAQC,IAAI,4BAIRuG,EAAO,SAACxE,EAAGC,GAKhB,OAJAyG,GAAc,SAACW,GAAD,4BACV,YAAIA,GAAGuB,MAAM,EAAGvI,EAAK,IADX,WAEV+I,EAAUpJ,GAAGuJ,eAFH,OAEmBH,EAAUnJ,SAEpC4I,EAAYxD,EAAUhF,GAAImE,KAAKxE,EAAGC,GAAI,CAC5C,gBACAD,EAAI,EACJ,QACAC,EAAI,KAIN,OAAc,IAAViG,EAEF,cAAC,EAAD,UACC,cAAC,EAAD,CAAQnF,SAxGmB,SAACyI,EAAMC,GACpCnD,EAAa,CAAC9H,EAAOkL,SAASF,EAAMC,KACpCnI,SAASgH,gBAAgBnH,MAAMoH,YAC9B,sBACAkB,GAEDtD,EAAS,QAqGW,IAAVD,EAET,cAAC,EAAD,UACC,cAAC,EAAD,CACCvH,SAAU0G,EAAU,GAAG1G,SACvBE,YAAawG,EAAU,GAAGxG,YAC1BkC,SAvGyB,SAACtC,GAC7B6H,EAAa,CAAC,IAAI9H,EAAOC,KACzB0H,EAAS,IAsGN/D,MAAOA,MAIU,IAAV8D,EAET,cAAC,EAAD,CAAW/F,aAAa,EAAxB,SACC,cAAC,EAAD,CACCE,GAAIA,EACJiF,SAAUA,EACVD,UAAWA,EACXI,MA9JU,WAGb,IAFA,IAAI/B,EAAS2B,EAAU,GACnBoC,EAAc,GACTxG,EAAI,EAAGA,EAAIyC,EAAO/E,SAAUsC,IAAK,CAEzC,IADA,IAAInC,EAAM,GACD6K,EAAI,EAAGA,EAAIjG,EAAO7E,YAAa8K,IACvC7K,EAAIG,KAAKyE,EAAOjF,KAAKwC,GAAG0I,GAAGxL,YAE5BsJ,EAAYxI,KAAK,IAAMH,EAAI0E,KAAK,KAAO,KAExCiE,EAAcA,EAAYjE,KAAK,KAC/B,IAAI2E,EAAM1B,EAAWmC,MAAM,EAAGvI,EAAK,GAAGmD,KAAK,IAC3CxF,QAAQC,IAAI,MAAOwI,GAEnBmD,IAAKC,sCAAmBpC,EAAcU,IAiJnC5C,MAAOA,EACP3F,IAAKA,EACLC,SAAUA,EACV2E,KAAMA,EACNpC,MAAOA,EACP2C,WAzKe,WAClB/G,QAAQC,IAAI,SACZsH,GAAM,SAACoD,GAAD,OAASA,UA4KR,uCC7STmB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAED1I,SAASC,eAAe,W","file":"static/js/main.bc032cdd.chunk.js","sourcesContent":["import { fraction } from \"mathjs\";\n\nexport default class Holder {\n\tconstructor(value) {\n\t\tthis.isFailure = false;\n\t\ttry {\n\t\t\t// Try to processes input value\n\t\t\tthis.value = fraction(\n\t\t\t\ttypeof value !== \"undefined\" && value !== null && value !== \"\"\n\t\t\t\t\t? value\n\t\t\t\t\t: \"0\"\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// If unable, log, denote, and set fraction to 0\n\t\t\tconsole.log(`Unable to process matrix with value \"${value}\"`);\n\t\t\tthis.value = fraction(\"0\");\n\t\t\tthis.isFailure = true;\n\t\t}\n\t\t// Set display to nothing if no value, otherwise formatted string\n\t\tthis.display = this.toString();\n\t}\n\n\t// Correctly format value as a fraction\n\ttoString() {\n\t\tlet stringValue = this.value.n;\n\t\tif (this.value.s === -1) stringValue = \"-\" + stringValue;\n\t\tif (this.value.d !== 1) stringValue = stringValue + \"/\" + this.value.d;\n\t\treturn stringValue;\n\t}\n}\n","import Holder from \"./Holder\";\nimport { equal, add, multiply } from \"mathjs\";\n\nexport default class Matrix {\n\tconstructor(data, impactedRows = []) {\n\t\tthis.rowCount = data.length;\n\t\tthis.columnCount = data[0].length;\n\t\tthis.impactedRows = impactedRows;\n\t\tthis.data = [];\n\t\tfor (let row = 0; row < this.rowCount; row++) {\n\t\t\tlet currentRow = [];\n\t\t\tfor (let column = 0; column < this.columnCount; column++) {\n\t\t\t\tcurrentRow.push(new Holder(data[row][column].display));\n\t\t\t}\n\t\t\tthis.data.push(currentRow);\n\t\t}\n\t}\n\n\tstatic fromSize(rowCount, columnCount) {\n\t\t// TODO: Fix bad double looping of list when initialized this way\n\t\tlet data = [];\n\t\tfor (let row = 0; row < rowCount; row++) {\n\t\t\tlet currentRow = [];\n\t\t\tfor (let column = 0; column < columnCount; column++) {\n\t\t\t\tcurrentRow.push(new Holder(\"123\"));\n\t\t\t}\n\t\t\tdata.push(currentRow);\n\t\t}\n\t\treturn new Matrix(data);\n\t}\n\n\t// Check if there are any differences between two rows\n\thasChanged(oldRow, newRow) {\n\t\tfor (let col = 0; col < oldRow.length; col++) {\n\t\t\tif (!equal(oldRow[col].value, newRow[col].value)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tadd(from, scalar, to) {\n\t\tconsole.log(\"got inside of add\");\n\t\tlet newRow = [...this.data[to]];\n\t\tconsole.log(\"got inside of add\");\n\t\tnewRow = newRow.map((holder, index) => {\n\t\t\tconsole.log(holder.value, this.data[from][index].value, scalar);\n\t\t\treturn new Holder(\n\t\t\t\tadd(\n\t\t\t\t\tholder.value,\n\t\t\t\t\tmultiply(this.data[from][index].value, scalar)\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tconsole.log(\"got inside of add\");\n\n\t\tif (!this.hasChanged(this.data[to], newRow)) {\n\t\t\tconsole.log(\"Nothing is changing!\");\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(\"got inside of add\");\n\t\treturn new Matrix(\n\t\t\tthis.data.map((val, index) => (index === to ? newRow : val)),\n\t\t\t[to]\n\t\t);\n\t}\n\n\t// Multiply a row by a scalar and return a new matrix with that applied\n\tmultiply(row, scalar) {\n\t\tlet newRow = [...this.data[row]];\n\t\t// Create a new row from multiplication applied to current values\n\t\tnewRow = newRow.map(\n\t\t\t(holder) => new Holder(multiply(holder.value, scalar))\n\t\t);\n\t\t// If the same as before, don't return a new matrix\n\t\tif (!this.hasChanged(this.data[row], newRow)) {\n\t\t\tconsole.log(\"You failure, nothing changed!!\");\n\t\t\treturn;\n\t\t}\n\t\t// Create and return a new matrix with new row\n\t\treturn new Matrix(\n\t\t\tthis.data.map((val, index) => (index === row ? newRow : val)),\n\t\t\t[row]\n\t\t);\n\t}\n\n\tswap(a, b) {\n\t\tif (!this.hasChanged(this.data[a], this.data[b])) {\n\t\t\tconsole.log(\"Those are the same! Nothing change!\");\n\t\t\treturn;\n\t\t}\n\t\treturn new Matrix(\n\t\t\tthis.data.map((val, index) => {\n\t\t\t\tif (index === a) return this.data[b];\n\t\t\t\tif (index === b) return this.data[a];\n\t\t\t\treturn val;\n\t\t\t}),\n\t\t\t[a, b]\n\t\t);\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/GoHawk.25ecaf2a.png\";","import GoHawkImage from \"../../media/GoHawk.png\";\nimport \"./ThemePage.css\";\n\nconst ThemePage = ({ removeBirds, children }) => {\n\t/*\n\t<div className=\"center\">\n\t\t<div className=\"div1\">\n\t\t\t<div className=\"div2 sc2\">{children}</div>\n\t\t</div>\n\t</div>\n\t*/\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h1>Matrix Calculator</h1>\n\t\t\t</header>\n\t\t\t<div id=\"bar\" />\n\t\t\t<div id=\"inside\">{children}</div>\n\t\t\t{removeBirds || <img id=\"leftImage\" alt=\"\" src={GoHawkImage} />}\n\t\t\t{removeBirds || <img id=\"rightImage\" alt=\"\" src={GoHawkImage} />}\n\t\t\t<footer>\n\t\t\t\t<p className=\"authors\">\n\t\t\t\t\tM\n\t\t\t\t\t<a\n\t\t\t\t\t\tid=\"rickRoll\"\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\trel=\"noreferrer noopener\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://youtu.be/dQw4w9WgXcQ\"\n\t\t\t\t\t>\n\t\t\t\t\t\ta\n\t\t\t\t\t</a>\n\t\t\t\t\tde By:{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"mailto:wyattspree@gmail.com\"\n\t\t\t\t\t\trel=\"noreferrer noopener\"\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\tWyatt Spree\n\t\t\t\t\t</a>\n\t\t\t\t\t{\" & \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"mailto:gaston95g@gmail.com\"\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\trel=\"noreferrer noopener\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\tGaston Gonnerman\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</>\n\t);\n};\n\nexport default ThemePage;\n","import \"./Choose.css\";\n\nconst Choose = ({ onSubmit }) => {\n\tconst submitOptions = () => {\n\t\tconst rowCount = document.getElementById(\"rowCount\").value;\n\t\tconst columnCount = document.getElementById(\"columnCount\").value;\n\t\tonSubmit(rowCount, columnCount);\n\t};\n\n\tlet options = [];\n\tfor (let i = 1; i < 11; i++) {\n\t\toptions.push(\n\t\t\t<option key={i} value={i}>\n\t\t\t\t{i}\n\t\t\t</option>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"vcenter hcenter full\">\n\t\t\t<div className=\"floating front\">\n\t\t\t\t<p className=\"inner-text instructions\">\n\t\t\t\t\tPlease select the dimensions for a matrix m x n then click\n\t\t\t\t\tthe \"Submit\" button\n\t\t\t\t</p>\n\t\t\t\t<br />\n\t\t\t\t<div className=\"offset\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<label htmlFor=\"rowCount\">\n\t\t\t\t\t\t\t\tNumber of rows: m ={\" \"}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select id=\"rowCount\">{options}</select>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<label htmlFor=\"columnCount\">\n\t\t\t\t\t\t\t\tNumber of columns: n ={\" \"}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"columnCount\"\n\t\t\t\t\t\t\t\tstyle={{ marginRight: 1 + \"em\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{options}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<br /> <br />\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"specialbutton submit\"\n\t\t\t\t\tonClick={submitOptions}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Choose;\n","import { memo } from \"react\";\n\nconst MatrixConfigureSquare = ({ id, value, onUpdate }) => {\n\treturn <input value={value} onChange={(e) => onUpdate(id, e)}></input>;\n};\n\nconst areEqual = (oldProps, newProps) => {\n\treturn oldProps.value === newProps.value;\n};\n\nexport default memo(MatrixConfigureSquare, areEqual);\n","import MatrixConfigureSquare from \"./MatrixConfigureSquare\";\n\nconst MatrixConfigure = ({ values, onUpdate }) => {\n\treturn (\n\t\t<div className=\"matrix wrapper\">\n\t\t\t{values.map((row, rowIndex) =>\n\t\t\t\trow.map((value, columnIndex) => (\n\t\t\t\t\t<MatrixConfigureSquare\n\t\t\t\t\t\tkey={rowIndex * row.length + columnIndex}\n\t\t\t\t\t\tid={rowIndex * row.length + columnIndex}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default MatrixConfigure;\n","import MatrixConfigure from \"./components/MatrixConfigure\";\nimport { useState, useEffect } from \"react\";\nimport \"./Configure.css\";\nimport Holder from \"../../Holder\";\n\nconst Configure = ({ rowCount, columnCount, onSubmit, reset }) => {\n\tlet failures = [];\n\tconst submitConfiguration = () => {\n\t\tlet data = [];\n\t\tlet failedPosition = [];\n\t\tfor (let row = 0; row < rowCount; row++) {\n\t\t\tlet currentRow = [];\n\t\t\tfor (let column = 0; column < columnCount; column++) {\n\t\t\t\tlet holder = new Holder(values[row][column]);\n\t\t\t\tconsole.log(holder);\n\t\t\t\tif (holder.isFailure) {\n\t\t\t\t\tfailedPosition.push([row, column, values[row][column]]);\n\t\t\t\t}\n\t\t\t\tcurrentRow.push(holder);\n\t\t\t}\n\t\t\tdata.push(currentRow);\n\t\t}\n\t\tconsole.log(failedPosition);\n\t\tif (failedPosition.length > 0) {\n\t\t\tfailures = failedPosition;\n\t\t\talert(\n\t\t\t\t\"Unable to processes at position: value\\n\" +\n\t\t\t\t\tfailedPosition\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t(pos) =>\n\t\t\t\t\t\t\t\t`    [${pos[0] + 1}, ${pos[1] + 1}]: \"${\n\t\t\t\t\t\t\t\t\tpos[2]\n\t\t\t\t\t\t\t\t}\"`\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(\"\\n\")\n\t\t\t);\n\t\t\treturn;\n\t\t} else {\n\t\t\tonSubmit(data);\n\t\t}\n\t};\n\n\tconst [values, setValues] = useState([]);\n\n\tconst updateSquare = (id, event) => {\n\t\tconst chosenRow = Math.floor(id / columnCount);\n\t\tconst chosenColumn = id % columnCount;\n\t\tconst newValue = event.target.value;\n\n\t\tif (newValue.match(\"[^0-9-/.]\")) return;\n\n\t\tsetValues((prev) =>\n\t\t\tprev.map((row, rowIndex) =>\n\t\t\t\trow.map((currentValue, columnIndex) => {\n\t\t\t\t\treturn rowIndex === chosenRow &&\n\t\t\t\t\t\tcolumnIndex === chosenColumn\n\t\t\t\t\t\t? newValue\n\t\t\t\t\t\t: currentValue;\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tlet startingValues = [];\n\t\tfor (let row = 0; row < rowCount; row++) {\n\t\t\tlet currentValues = [];\n\t\t\tfor (let column = 0; column < columnCount; column++) {\n\t\t\t\tcurrentValues.push(\"\");\n\t\t\t}\n\t\t\tstartingValues.push(currentValues);\n\t\t}\n\t\tsetValues(startingValues);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"vcenter hcenter full\">\n\t\t\t<div className=\"floating front\">\n\t\t\t\t<div className=\"inner-text instructions\">\n\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\tPlease enter the elements of your matrix. Fields left\n\t\t\t\t\t\tempty will be interpreted as 0.\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\tYou may use any mix of fractions and decimals. When you\n\t\t\t\t\t\tare done please click the \"Submit\" button.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<MatrixConfigure\n\t\t\t\t\tvalues={values}\n\t\t\t\t\tfailures={failures}\n\t\t\t\t\tonUpdate={updateSquare}\n\t\t\t\t/>\n\t\t\t\t<br /> <br />\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"specialbutton reset\"\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\tonClick={reset}\n\t\t\t\t>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"specialbutton submit\"\n\t\t\t\t\tonClick={submitConfiguration}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Configure;\n","import { memo } from \"react\";\n\n// Simple helper component just used for displaying an uneditable matrix quickly\nconst MatrixDisplay = ({ id, matrix, onClick, ignoreTransformations }) => {\n\treturn (\n\t\t<div className=\"matrix wrapper\" onClick={() => onClick && onClick(id)}>\n\t\t\t{/* Flatten the array and make spans out of each value (grid fixes it) and bold anything in \"affected row\" based on math */}\n\t\t\t{matrix &&\n\t\t\t\tmatrix.data.flat().map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontWeight:\n\t\t\t\t\t\t\t\t\tmatrix.impactedRows.indexOf(\n\t\t\t\t\t\t\t\t\t\tMath.floor(index / matrix.columnCount)\n\t\t\t\t\t\t\t\t\t) !== -1 && !ignoreTransformations\n\t\t\t\t\t\t\t\t\t\t? \"bold\"\n\t\t\t\t\t\t\t\t\t\t: \"normal\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.display}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</div>\n\t);\n};\n\n// Only update if just changed\nconst areEqual = (oldProps, newProps) => newProps.activeId !== newProps.id;\n\nexport default memo(MatrixDisplay, areEqual);\n","const Add = ({ options, action }) => {\n\tconst add = () => {\n\t\tconst from = Math.floor(document.getElementById(\"addFrom\").value) - 1;\n\t\tconst scalar = document.getElementById(\"addMultiplier\").value;\n\t\tconst to = Math.floor(document.getElementById(\"addTo\").value) - 1;\n\t\taction(from, scalar, to);\n\t};\n\n\treturn (\n\t\t<div className=\"inner-text\">\n\t\t\tAdd row\n\t\t\t<select id=\"addFrom\">{options}</select>\n\t\t\t<span>multiplied by</span>\n\t\t\t<input id=\"addMultiplier\" placeholder=\"0\"></input> to row\n\t\t\t<select id=\"addTo\">{options}</select>\n\t\t\t<button onClick={add}>Confirm</button>\n\t\t</div>\n\t);\n};\n\nexport default Add;\n","const Multiply = ({ options, action }) => {\n\tconst multiply = () => {\n\t\tconst to = Math.floor(document.getElementById(\"multiplyTo\").value) - 1;\n\t\tconst scalar = document.getElementById(\"multiplyScalar\").value;\n\t\taction(to, scalar);\n\t};\n\n\t// <button onClick={() => action(1, 321)}>Multiply row 1 by 30</button>\n\treturn (\n\t\t<div className=\"inner-text\">\n\t\t\tMultiply row\n\t\t\t<select id=\"multiplyTo\">{options}</select>\n\t\t\t<span>by</span>\n\t\t\t<input id=\"multiplyScalar\" placeholder=\"1\"></input>\n\t\t\t<button onClick={multiply}>Confirm</button>\n\t\t</div>\n\t);\n};\n\nexport default Multiply;\n","const Swap = ({ options, action }) => {\n\tconst swap = () => {\n\t\tconst a = Math.floor(document.getElementById(\"swapA\").value) - 1;\n\t\tconst b = Math.floor(document.getElementById(\"swapB\").value) - 1;\n\t\taction(a, b);\n\t};\n\n\treturn (\n\t\t<div className=\"inner-text\">\n\t\t\tSwap rows\n\t\t\t<select id=\"swapA\">{options}</select>\n\t\t\t<span>and</span>\n\t\t\t<select id=\"swapB\">{options}</select>\n\t\t\t<button onClick={swap}>Confirm</button>\n\t\t</div>\n\t);\n};\n\nexport default Swap;\n","import \"./Operations.css\";\nimport Add from \"./Add\";\nimport Multiply from \"./Multiply\";\nimport Swap from \"./Swap\";\n\nconst Operations = ({ height, add, multiply, swap }) => {\n\t// Create a list of options for row selectors\n\tconst options = [];\n\tfor (let i = 1; i <= height; i++) {\n\t\toptions.push(\n\t\t\t<option value={i} key={i}>\n\t\t\t\t{i}\n\t\t\t</option>\n\t\t);\n\t}\n\n\t// Reset the value of a selector or input given its id\n\tconst resetSelector = (id) => (document.getElementById(id).value = 1);\n\tconst resetInput = (id) => (document.getElementById(id).value = \"\");\n\n\t// Reset every value in the input section\n\tconst reset = () => {\n\t\tresetSelector(\"addFrom\");\n\t\tresetInput(\"addMultiplier\");\n\t\tresetSelector(\"addTo\");\n\n\t\tresetSelector(\"multiplyTo\");\n\t\tresetInput(\"multiplyScalar\");\n\n\t\tresetSelector(\"swapA\");\n\t\tresetSelector(\"swapB\");\n\t};\n\n\t// Call the function with given args and if successful reset\n\tconst processor = (fn, ...args) => fn(...args) && reset();\n\n\treturn (\n\t\t<div id=\"controls\">\n\t\t\t<Add\n\t\t\t\toptions={options}\n\t\t\t\taction={(...args) => processor(add, ...args)}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<Multiply\n\t\t\t\toptions={options}\n\t\t\t\taction={(...args) => processor(multiply, ...args)}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<Swap\n\t\t\t\toptions={options}\n\t\t\t\taction={(...args) => processor(swap, ...args)}\n\t\t\t/>\n\t\t\t<br />\n\t\t</div>\n\t);\n};\n\nexport default Operations;\n","import MatrixDisplay from \"./MatrixDisplay\";\nimport Operations from \"./Operations/Operations\";\nimport { useEffect } from \"react\";\n\nconst MatrixPrimary = ({ matrix, add, multiply, swap, fakeUpdate }) => {\n\tuseEffect(() => {\n\t\tif (!matrix) {\n\t\t\tfakeUpdate();\n\t\t}\n\t});\n\treturn (\n\t\t<>\n\t\t\t<p\n\t\t\t\tclassName=\"inner-text instructions\"\n\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t>\n\t\t\t\tPlease select one of the below operations to manipulate the\n\t\t\t\tprimary matrix.\n\t\t\t</p>\n\t\t\t{/* Turn off ignore transforamtions if we want the primary matrix to bold rows */}\n\t\t\t<MatrixDisplay\n\t\t\t\tmatrix={matrix}\n\t\t\t\tkey={Math.random()}\n\t\t\t\tignoreTransformations={true}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<Operations\n\t\t\t\theight={(matrix && matrix.rowCount) || 0}\n\t\t\t\tadd={add}\n\t\t\t\tmultiply={multiply}\n\t\t\t\tswap={swap}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default MatrixPrimary;\n","const Comment = ({ message }) => {\n\treturn (\n\t\t<p>\n\t\t\t<span style={{fontSize: \"25px\"}}>&darr;</span>\n\t\t\t{message[0].toString()}\n\t\t\t<span className=\"standout\">{message[1]}</span>\n\t\t\t{message[2].toString()}\n\t\t\t<span className=\"standout\">{message[3]}</span>\n\t\t\t{message[4].toString()}\n\t\t\t<span className=\"standout\">{message[5]}</span>\n\t\t\t<span style={{fontSize: \"25px\"}}>&darr;</span>\n\t\t</p>\n\t);\n};\n\nexport default Comment;\n","import { memo, Fragment } from \"react\";\nimport MatrixDisplay from \"./MatrixDisplay\";\nimport Comment from \"./Comment\";\n\nconst MatrixList = ({ matricies, messages, id, setId }) => {\n\treturn (\n\t\t<>\n\t\t\t<p style={{ textAlign: \"center\" }}>\n\t\t\t\tDynamic History (Click on any matrix to revert to it)\n\t\t\t</p>\n\t\t\t{matricies.map((matrix, index) => (\n\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t{/* Bad fix for not having the same amount of comments and matricies */}\n\t\t\t\t\t{index > 0 && <Comment message={messages[index - 1]} />}\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tid={index}\n\t\t\t\t\t\tclassName={index === id ? \"active\" : \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MatrixDisplay\n\t\t\t\t\t\t\tonClick={setId}\n\t\t\t\t\t\t\tmatrix={matrix}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tactiveId={id}\n\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nconst areEqual = (oldProps, newProps) => oldProps.id === newProps.id;\n\nexport default memo(MatrixList, areEqual);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport \"./Manipulate.css\";\nimport MatrixPrimary from \"./components/MatrixPrimary\";\nimport MatrixList from \"./components/MatrixList\";\nimport { useState, useEffect } from \"react\";\n\nconst Manipulate = ({\n\tid,\n\tmessages,\n\tmatricies,\n\tshare,\n\tsetId,\n\tadd,\n\tmultiply,\n\tswap,\n\treset,\n\tfakeUpdate,\n}) => {\n\tconst [largeScreen, setIsLargeScreen] = useState(window.innerWidth > 1000);\n\tuseEffect(() => {\n\t\tconst handleResize = () => {\n\t\t\tsetIsLargeScreen(window.innerWidth > 1000);\n\t\t};\n\t\twindow.addEventListener(\"resize\", handleResize);\n\t});\n\n\tuseEffect(() => {\n\t\t// TODO: Make this \"id\" or \"bottom\" depending on\n\t\t// if we want it to scroll to the bottom of the page or to selected matrix\n\t\t// If we want to scroll to selected matrix, potentially use something from\n\t\t// https://stackoverflow.com/questions/8922107/javascript-scrollintoview-middle-alignment#50453912\n\t\t// to put it into the middle to visually look better\n\t\tif (largeScreen) document.getElementById(\"bottom\").scrollIntoView();\n\t}, [matricies, largeScreen]);\n\n\t// If large screen, have two seperate columns for active vs history\n\t// Overwise put everything under one column\n\tif (largeScreen) {\n\t\treturn (\n\t\t\t<div id=\"primaryLayout\">\n\t\t\t\t<div className=\"vcenter hcenter dontoverflow\">\n\t\t\t\t\t<div className=\"floating front\">\n\t\t\t\t\t\t<div className=\"hcenter activeMatrix\">\n\t\t\t\t\t\t\t<MatrixPrimary\n\t\t\t\t\t\t\t\tmatrix={matricies[id]}\n\t\t\t\t\t\t\t\tadd={add}\n\t\t\t\t\t\t\t\tmultiply={multiply}\n\t\t\t\t\t\t\t\tswap={swap}\n\t\t\t\t\t\t\t\tfakeUpdate={fakeUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"tooltip\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"specialbutton reset\"\n\t\t\t\t\t\t\t\tonClick={reset}\n\t\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"share\" onClick={share}>\n\t\t\t\t\t\t\t\t<span className=\"tooltiptext\" id=\"myTooltip\">\n\t\t\t\t\t\t\t\t\tCopied URL\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"vcenter hcenter dontoverflow\">\n\t\t\t\t\t<div className=\"floating front scrollbarParent\">\n\t\t\t\t\t\t<div className=\"hcenter scrollbar\">\n\t\t\t\t\t\t\t<MatrixList\n\t\t\t\t\t\t\t\tmatricies={matricies}\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tsetId={setId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div id=\"bottom\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"vcenter hcenter full dontoverflow\">\n\t\t\t\t\t<div className=\"floating front scrollbarParent\">\n\t\t\t\t\t\t<div className=\"hcenter scrollbar\">\n\t\t\t\t\t\t\t<MatrixPrimary\n\t\t\t\t\t\t\t\tmatrix={matricies[id]}\n\t\t\t\t\t\t\t\tadd={add}\n\t\t\t\t\t\t\t\tmultiply={multiply}\n\t\t\t\t\t\t\t\tswap={swap}\n\t\t\t\t\t\t\t\tfakeUpdate={fakeUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"tooltip\" style={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t\t\t\tclassName=\"specialbutton reset\"\n\t\t\t\t\t\t\t\t\tonClick={reset}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className=\"share\" onClick={share}>\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tclassName=\"tooltiptext\"\n\t\t\t\t\t\t\t\t\t\tid=\"myTooltip\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCopied URL\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<MatrixList\n\t\t\t\t\t\t\t\tmatricies={matricies}\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tsetId={setId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n};\n\nexport default Manipulate;\n","import { useState, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\nimport { fraction } from \"mathjs\";\nimport Holder from \"./Holder\";\nimport Matrix from \"./Matrix\";\nimport ThemePage from \"./pages/ThemePage/ThemePage\";\nimport Choose from \"./pages/Choose/Choose\";\nimport Configure from \"./pages/Configure/Configure\";\nimport Manipulate from \"./pages/Manipulate/Manipulate\";\n\nconst App = () => {\n\tconst [stage, setStage] = useState(0);\n\tconst [id, setIdFinal] = useState(0);\n\tconst [messages, setMessages] = useState([]);\n\tconst [matricies, setMatricies] = useState([]);\n\tconst [operationList, setOpList] = useState([]);\n\tconst [currOpList, setCurrOpList] = useState([\"\"]);\n\n\tconst URL = \"https://gastongonnerman.com\";\n\n\t// TODO: Unless this gets used, delete it and rename setIdFinal to setId\n\tconst setId = (newId) => {\n\t\tsetIdFinal(newId);\n\t};\n\n\tconst reset = () => {\n\t\tsetStage(0);\n\t\tsetId(0);\n\t\tsetMessages([]);\n\t\tsetMatricies([]);\n\t\tsetOpList([]);\n\t\tsetCurrOpList([]);\n\t};\n\n\tconst getRowNumber = (value) => {\n\t\treturn value.charCodeAt(0) - 97;\n\t};\n\n\tuseEffect(() => {\n\t\tlet params = new URLSearchParams(document.location.search.substring(0));\n\t\twindow.history.replaceState(\"\", \"\", \"?\");\n\n\t\tlet x = params.get(\"share\");\n\t\tif (!x) return;\n\n\t\tconst lastIndex = x.lastIndexOf(\"]\") + 1;\n\n\t\tlet firstMatrix = x.substr(0, lastIndex);\n\t\tlet operations = x.substr(lastIndex);\n\n\t\tconst matrix = firstMatrix.split(\"],[\").map((x) => {\n\t\t\treturn x\n\t\t\t\t.replace(\"[\", \"\")\n\t\t\t\t.replace(\"]\", \"\")\n\t\t\t\t.split(\",\")\n\t\t\t\t.map((x) => new Holder(x));\n\t\t});\n\n\t\tif (operations) {\n\t\t\toperations = operations\n\t\t\t\t.match(new RegExp(\"[A-Z][^A-Z]*\", \"g\"))\n\t\t\t\t.map((x) => x.toLowerCase());\n\n\t\t\tsetOpList(\n\t\t\t\toperations.map((operation) => {\n\t\t\t\t\tconst isAlpha = new RegExp(\"[A-Za-z]+\");\n\t\t\t\t\tlet typeOfOperation = 0;\n\t\t\t\t\tlet ops = [];\n\n\t\t\t\t\t// Copy down the first value of the operation\n\t\t\t\t\tops.push(getRowNumber(operation.charAt(0)));\n\t\t\t\t\toperation = operation.substr(1);\n\n\t\t\t\t\t// Loop through and manipulate based on specific type\n\t\t\t\t\t// 2 = Add; 1 = Swap; 0 = Mult\n\t\t\t\t\tif (operation[operation.length - 1].match(isAlpha)) {\n\t\t\t\t\t\tif (operation.length === 1) {\n\t\t\t\t\t\t\ttypeOfOperation = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttypeOfOperation = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Everything besides mult, grab last row\n\t\t\t\t\tif (typeOfOperation !== 0) {\n\t\t\t\t\t\tops.push(\n\t\t\t\t\t\t\tgetRowNumber(operation.charAt(operation.length - 1))\n\t\t\t\t\t\t);\n\t\t\t\t\t\toperation = operation.substr(0, operation.length - 1);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Everything besides swap, add fractional value\n\t\t\t\t\tif (typeOfOperation !== 1) {\n\t\t\t\t\t\tops.splice(1, 0, operation);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [typeOfOperation, ...ops];\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tconsole.log(\"First\", matrix);\n\t\tconsole.log(\"Op\", operationList);\n\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t\"--matrixColumnCount\",\n\t\t\tmatrix[0].length\n\t\t);\n\t\tsetId(0);\n\t\tsetStage(2);\n\t\tsetMatricies([new Matrix(matrix)]);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (operationList.length === 0) return;\n\t\tlet currentOperation = [...operationList].shift();\n\t\tconst operationType = currentOperation.shift();\n\t\tif (operationType === 0) {\n\t\t\tconsole.log(\"Mult\", currentOperation);\n\t\t\tmultiply(...currentOperation);\n\t\t} else if (operationType === 1) {\n\t\t\tswap(...currentOperation);\n\t\t} else if (operationType === 2) {\n\t\t\tadd(...currentOperation);\n\t\t}\n\t\tsetOpList((old) => old.slice(1));\n\t}, [operationList]);\n\n\tuseEffect(() => {\n\t\tsetId((old) => old);\n\t}, [stage, matricies]);\n\n\tconst fakeUpdate = () => {\n\t\tconsole.log(\"AWWWW\");\n\t\tsetId((old) => old);\n\t};\n\n\tconst share = () => {\n\t\tlet matrix = matricies[0];\n\t\tlet firstMatrix = [];\n\t\tfor (let i = 0; i < matrix.rowCount; i++) {\n\t\t\tlet row = [];\n\t\t\tfor (let j = 0; j < matrix.columnCount; j++) {\n\t\t\t\trow.push(matrix.data[i][j].toString());\n\t\t\t}\n\t\t\tfirstMatrix.push(\"[\" + row.join(\",\") + \"]\");\n\t\t}\n\t\tfirstMatrix = firstMatrix.join(\",\");\n\t\tlet ops = currOpList.slice(0, id + 1).join(\"\");\n\t\tconsole.log(\"Cur\", currOpList);\n\n\t\tcopy(URL + \"/?share=\" + firstMatrix + ops);\n\t};\n\n\t// Update a specific square while in editing phase\n\tconst updateSquare = (row, column, value) => {\n\t\tconsole.log(row, column);\n\t\t// let initialMatrix = { ...matricies[0] };\n\t\tlet initialMatrix = matricies[0];\n\t\ttry {\n\t\t\tinitialMatrix.data[row][column] = new Holder(value);\n\t\t\tsetMatricies([initialMatrix]);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error occured while updating matrix\");\n\t\t\tinitialMatrix.data[row][column] = new Holder(\"0\", true);\n\t\t\tsetMatricies([initialMatrix]);\n\t\t}\n\t};\n\n\t// After given the rows and columns, create an initial matrix\n\tconst confirmRowsAndColumns = (rows, columns) => {\n\t\tsetMatricies([Matrix.fromSize(rows, columns)]);\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t\"--matrixColumnCount\",\n\t\t\tcolumns\n\t\t);\n\t\tsetStage(1);\n\t};\n\n\t// Finalize the initial matrix, do validation, replace some values\n\tconst confirmConfiguration = (data) => {\n\t\tsetMatricies([new Matrix(data)]);\n\t\tsetStage(2);\n\t};\n\n\tconst doOperation = (newMatrix, message) => {\n\t\tconsole.log(\"on op\");\n\t\tif (addMatrix(newMatrix)) {\n\t\t\taddMessage(message);\n\t\t\tsetId((id) => id + 1);\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tconst addMatrix = (newMatrix) => {\n\t\tif (!newMatrix) return false;\n\t\tlet listOfMatricies = [...matricies];\n\t\tlistOfMatricies = listOfMatricies.slice(0, id + 1);\n\t\tconsole.log(\"Matricies\", listOfMatricies);\n\t\tsetMatricies([...listOfMatricies, newMatrix]);\n\t\treturn true;\n\t};\n\n\tconst addMessage = (message) => {\n\t\twhile (message.length < 6) {\n\t\t\tmessage.push(\"\");\n\t\t}\n\t\tsetMessages((prevMessages) => {\n\t\t\tlet listOfMessages = prevMessages.slice(0, id);\n\t\t\tlistOfMessages.push(message.map((x) => x.toString()));\n\t\t\tconsole.log(\"Messages\", listOfMessages);\n\t\t\treturn listOfMessages;\n\t\t});\n\t};\n\n\tconst mapToChar = (x) => String.fromCharCode(x + 97);\n\n\tconst add = (from, scalar, to) => {\n\t\ttry {\n\t\t\tsetCurrOpList((x) => [\n\t\t\t\t...[...x].slice(0, id + 1),\n\t\t\t\t`${mapToChar(from).toUpperCase()}${new Holder(\n\t\t\t\t\tscalar\n\t\t\t\t)}${mapToChar(to)}`,\n\t\t\t]);\n\t\t\treturn doOperation(matricies[id].add(from, fraction(scalar), to), [\n\t\t\t\t\"Added row \",\n\t\t\t\tfrom + 1,\n\t\t\t\t\" times \",\n\t\t\t\tnew Holder(scalar),\n\t\t\t\t\" to row \",\n\t\t\t\tto + 1,\n\t\t\t]);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error when adding\");\n\t\t}\n\t};\n\n\tconst multiply = (row, scalar) => {\n\t\tconsole.log(row, scalar);\n\t\ttry {\n\t\t\tsetCurrOpList((x) => [\n\t\t\t\t...[...x].slice(0, id + 1),\n\t\t\t\t`${mapToChar(row).toUpperCase()}${new Holder(scalar)}`,\n\t\t\t]);\n\t\t\tconsole.log(id);\n\t\t\tconsole.log(matricies);\n\t\t\treturn doOperation(matricies[id].multiply(row, fraction(scalar)), [\n\t\t\t\t\"Multiplied row \",\n\t\t\t\trow + 1,\n\t\t\t\t\" by \",\n\t\t\t\tnew Holder(scalar),\n\t\t\t]);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error when multiplying\");\n\t\t}\n\t};\n\n\tconst swap = (a, b) => {\n\t\tsetCurrOpList((x) => [\n\t\t\t...[...x].slice(0, id + 1),\n\t\t\t`${mapToChar(a).toUpperCase()}${mapToChar(b)}`,\n\t\t]);\n\t\treturn doOperation(matricies[id].swap(a, b), [\n\t\t\t\"Swapped rows \",\n\t\t\ta + 1,\n\t\t\t\" and \",\n\t\t\tb + 1,\n\t\t]);\n\t};\n\n\tif (stage === 0) {\n\t\treturn (\n\t\t\t<ThemePage>\n\t\t\t\t<Choose onSubmit={confirmRowsAndColumns} />\n\t\t\t</ThemePage>\n\t\t);\n\t} else if (stage === 1) {\n\t\treturn (\n\t\t\t<ThemePage>\n\t\t\t\t<Configure\n\t\t\t\t\trowCount={matricies[0].rowCount}\n\t\t\t\t\tcolumnCount={matricies[0].columnCount}\n\t\t\t\t\tonSubmit={confirmConfiguration}\n\t\t\t\t\treset={reset}\n\t\t\t\t/>\n\t\t\t</ThemePage>\n\t\t);\n\t} else if (stage === 2) {\n\t\treturn (\n\t\t\t<ThemePage removeBirds={true}>\n\t\t\t\t<Manipulate\n\t\t\t\t\tid={id}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tmatricies={matricies}\n\t\t\t\t\tshare={share}\n\t\t\t\t\tsetId={setId}\n\t\t\t\t\tadd={add}\n\t\t\t\t\tmultiply={multiply}\n\t\t\t\t\tswap={swap}\n\t\t\t\t\treset={reset}\n\t\t\t\t\tfakeUpdate={fakeUpdate}\n\t\t\t\t/>\n\t\t\t</ThemePage>\n\t\t);\n\t} else {\n\t\treturn <p>ERROR</p>;\n\t}\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}