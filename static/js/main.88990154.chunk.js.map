{"version":3,"sources":["holder.js","matrix-square.js","add.js","multiply.js","matrix.js","app.js","index.js"],"names":["Holder","this","display","value","fraction","length","substr","syncValue","console","log","d","n","s","factor","other","add","multiply","syncDisplay","MatrixSquare","props","update","bind","event","row","column","target","placeholder","id","style","textAlign","height","width","onChange","className","React","Component","Add","confirmAdd","from","Math","floor","document","getElementById","multiplier","to","action","reset","options","i","rowCount","push","onClick","Multiply","confirmMultiply","toChange","multiplierChange","state","setState","error","Matrix","data","mheight","currentRow","mwidth","recieveFromSquare","swap","a","b","aData","newDisplay","setDisplay","getDisplay","frozen","App","stage","setMatrix","freezeMatrix","rows","columns","returnValue","htmlFor","marginRight","ReactDOM","render"],"mappings":"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","file":"static/js/main.88990154.chunk.js","sourcesContent":["import { add, multiply, fraction } from 'mathjs';\n\nexport class Holder {\n    constructor() {\n        this.display = \"0\";\n        this.value = fraction(\"0\");\n    }\n\n    getDisplay() {\n        return this.display;\n    }\n\n    setDisplay(display) {\n        while(display.length > 0 && display[0] === \"0\") {\n            display = display.substr(1);\n        }\n        this.display = display;\n        this.syncValue();\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    syncValue() {\n        try {\n            this.value = fraction(this.display)\n        } catch {\n            console.log(\"Errors Updating\");\n        }\n    }\n\n    syncDisplay() {\n        try {\n            if(this.value.d == \"1\") {\n                this.display = this.value.n;\n            } else {\n                this.display = this.value.n + \"/\" + this.value.d;\n            }\n            if(this.value.s == \"-1\") {\n                this.display = \"-\" + this.display;\n            }\n        } catch {\n            console.log(\"Errors Updating\");\n        }\n    }\n\n    add(factor, other) {\n        this.value = add(this.value, multiply(factor, other.value));\n        this.syncDisplay();\n    }\n\n    multiply(factor) {\n        this.value = multiply(factor, this.value);\n        this.syncDisplay();\n    }\n}","import React from 'react';\nimport { fraction } from 'mathjs';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nexport class MatrixSquare extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount() {\n    this.update = this.update.bind(this);\n  }\n\n  update(event) {\n    this.props.update(this.props.row, this.props.column, event.target.value);\n  }\n\n  render() {\n    return (\n      <input placeholder=\"0\" id={this.props.id} style={{textAlign: \"center\", height: 2 + \"em\", width: 3 + \"em\"}} onChange={this.update} value={this.props.value} className=\"matrixSquare\"></input>\n    );\n  }\n\n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nexport class Add extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmAdd = this.confirmAdd.bind(this);\n  }\n\n  confirmAdd() {\n    const from = Math.floor( document.getElementById(\"addFrom\").value ) - 1;\n    const multiplier = fraction( document.getElementById(\"addMultiplier\").value || 0 );\n    console.log(multiplier);\n    const to = Math.floor( document.getElementById(\"addTo\").value ) - 1;\n    this.props.action(to, multiplier, from);\n    this.reset();\n    console.log(\"completed\");\n  }\n\n  reset() {\n    document.getElementById(\"addFrom\").value = 1;\n    document.getElementById(\"addMultiplier\").value = \"\";\n    document.getElementById(\"addTo\").value = 1;\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i}>{i}</option>);\n    }\n      return (\n          <div>\n              Add row\n              <select id='addFrom'>\n                {options}\n              </select>\n              *\n              <input id=\"addMultiplier\" placeholder=\"0\"></input>\n              to row\n              <select id='addTo'>\n                {options}\n              </select>\n              <button onClick={this.confirmAdd}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport { fraction } from 'mathjs';\nimport './index.css';\n\nexport class Multiply extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.confirmMultiply = this.confirmMultiply.bind(this);\n    this.toChange = this.toChange.bind(this);\n    this.multiplierChange = this.multiplierChange.bind(this);\n    this.state = {\n      to: 1,\n      multiplier: \"\"\n    }\n  }\n\n  toChange(value) {\n    this.setState({\n      to: value.target.value\n    });\n  }\n\n  multiplierChange(value) {\n    this.setState({\n      multiplier: value.target.value\n    });\n  }\n\n  confirmMultiply() {\n    try {\n      const to = Math.floor( document.getElementById(\"multiplyTo\").value ) - 1;\n      const multiplier = fraction( document.getElementById(\"multiplyMultiplier\").value || 1 );\n      this.props.action(to, multiplier);\n      this.reset();\n    }\n    catch (error) {\n      console.log(\"Error\", error);\n    }\n  }\n\n  reset() {\n    this.setState({\n      to: 1,\n      multiplier: \"\"\n    })\n  }\n\n  render() {\n    let options = [];\n    for(let i = 1; i <= this.props.rowCount; i++) {\n      options.push(<option value={i}>{i}</option>);\n    }\n      return (\n          <div>\n              Multiply row\n              <select onChange={this.toChange} value={this.state.to} id='multiplyTo'>\n                {options}\n              </select>\n              by\n              <input onChange={this.multiplierChange} id=\"multiplyMultiplier\" value={this.state.multiplier} placeholder=\"1\"></input>\n              <button onClick={this.confirmMultiply}>\n                Confirm\n              </button>\n          </div>\n      )\n  }\n  \n}\n","import React from 'react';\nimport './index.css';\nimport { Holder } from './holder.js';\nimport { MatrixSquare } from './matrix-square.js';\nimport { Add } from './add.js';\nimport { Multiply } from './multiply.js';\n\nexport class Matrix extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        let data = []\n        for(let row = 0; row < this.props.mheight; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.props.mwidth; column++) {\n                currentRow.push(new Holder());\n            }\n            data.push(currentRow);\n        }\n\n        this.state = {\n            data: data\n        };\n\n        this.recieveFromSquare = this.recieveFromSquare.bind(this);\n        this.add = this.add.bind(this);\n        this.multiply = this.multiply.bind(this);\n        this.swap = this.swap.bind(this);\n    }\n\n    add(to, multiplier, from) {\n        for(let column = 0; column < this.props.mwidth; column++) {\n            this.state.data[to][column].add(multiplier, this.state.data[from][column]);\n        }\n        this.update();\n    }\n\n    multiply(to, multiplier) {\n        for(let column = 0; column < this.props.mwidth; column++) {\n            this.state.data[to][column].multiply(multiplier);\n        }\n        this.update();\n    }\n\n    swap(a, b) {\n        for(let column = 0; column < this.props.mwidth; column++) {\n            let aData = this.state.data[a];\n            this.state.data[a] = this.state.data[b];\n            this.state.data[b] = aData;\n        }\n        this.update();\n    }\n\n    recieveFromSquare(row, column, newDisplay) {\n        this.state.data[row][column].setDisplay(newDisplay);\n        this.update();\n    }\n\n    update() { this.setState({}); }\n\n    render() {\n\n        let display = [];\n        for(let row = 0; row < this.state.data.length; row++) {\n            let currentRow = [];\n            for(let column = 0; column < this.state.data[row].length; column++) {\n                currentRow.push(\n                    <MatrixSquare update={this.recieveFromSquare} row={row} column={column} value={this.state.data[row][column].getDisplay()} key={row+\"00\"+column} />\n                );\n            }\n\n            display.push(\n                <div key={row}>\n                    {currentRow}\n                </div>\n            );\n        }\n\n        if(this.props.frozen) {\n            return (\n                <div>\n                    {display}\n                    <Add rowCount={this.props.mheight} action={this.add} />\n                    <Multiply rowCount={this.props.mheight} action={this.multiply} />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    {display}\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Matrix } from './matrix.js';\n\nexport class App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            stage: 0\n        }\n        this.setMatrix = this.setMatrix.bind(this);\n        this.freezeMatrix = this.freezeMatrix.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    reset() {\n        this.setState({\n            stage: 0\n        });\n    }\n\n    setMatrix() {\n        const rows = document.getElementById(\"row\").value;\n        const columns = document.getElementById(\"column\").value;\n        this.setState({\n            stage: 1,\n            rows: rows,\n            columns: columns\n        });\n    }\n\n    freezeMatrix() {\n        this.setState({\n            stage: 2\n        });\n    }\n\n    render() {\n        let returnValue = \"\";\n        switch(this.state.stage) {\n            case 0:\n                let options = []\n                for(let i = 1; i < 11; i++) {\n                    options.push(<option key={i} value={i}>{i}</option> );\n                }\n                console.log(options);\n                returnValue = (\n                    <div>\n                        <label htmlFor=\"row\">Row: </label>\n                        <select id=\"row\">\n                            {options}\n                        </select>\n                        <label htmlFor=\"column\"> Column: </label>\n                        <select id=\"column\" style={{marginRight:1 +\"em\"}}>\n                            {options}\n                        </select>\n\n                        <button onClick={this.setMatrix}>GO!</button>\n                        <button onClick={this.reset}>Reset</button>\n                    </div>\n                );\n                break;\n            case 1:\n                returnValue = (\n                    <div>\n                        <Matrix mwidth={this.state.columns} mheight={this.state.rows} />\n                        <button onClick={this.freezeMatrix}>GO!</button>\n                        <button onClick={this.reset}>Reset</button>\n                    </div>\n                );\n                break;\n            case 2:\n                returnValue = (\n                    <div>\n                        <Matrix frozen={true} mwidth={this.state.columns} mheight={this.state.rows} />\n                        <button onClick={this.reset}>Reset</button>\n                    </div>\n                );\n                break;\n            default:\n                returnValue = (\n                    <div>Epic</div>\n                )\n                break;\n        }\n        console.log(returnValue);\n        return returnValue;\n        //    <Matrix mwidth=\"3\" mheight=\"5\" />\n    }\n}\n/*\n    <p>\n    Rows: <input type=\"number\"></input>\n    Columns: <input type=\"number\"></input>\n    </p>\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app.js';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}